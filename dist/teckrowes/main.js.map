{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/congratulations/congratulations.component.html","webpack:///./src/app/congratulations/congratulations.component.less","webpack:///./src/app/congratulations/congratulations.component.ts","webpack:///./src/app/login/auth.guard.ts","webpack:///./src/app/login/auth.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.less","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { CongratulationsComponent } from './congratulations/congratulations.component';\nimport { AuthGuard } from './login/auth.guard';\n\nconst routes: Routes = [{\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'congratulations',\n  canActivate: [AuthGuard],\n  component: CongratulationsComponent\n}, {\n  path: '', redirectTo: 'congratulations', pathMatch: 'full' ,\n}, {\n  path: '**', redirectTo: 'congratulations'\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item\\\"\\n        *ngIf=\\\"!isLoggedIn\\\">\\n      <a class=\\\"nav-link\\\"\\n      [routerLink]=\\\"['/login']\\\">Log In</a>\\n    </li>\\n    <li class=\\\"nav-item\\\"\\n        *ngIf=\\\"isLoggedIn\\\">\\n      <a class=\\\"nav-link\\\"\\n         (click)=\\\"logOut()\\\">Log Out</a>\\n    </li>\\n  </ul>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","module.exports = \".nav-link {\\n  cursor: pointer !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93ZXNsZXlyZWJlbG8vc2l0ZXMvdGVja3Jvd2VzL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9hcHAuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1saW5rIHtcbiAgY3Vyc29yOiBwb2ludGVyICFpbXBvcnRhbnQ7XG59IiwiLm5hdi1saW5rIHtcbiAgY3Vyc29yOiBwb2ludGVyICFpbXBvcnRhbnQ7XG59XG4iXX0= */\"","import { Component } from '@angular/core';\nimport { AuthService } from './login/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  constructor(private authService: AuthService, private router: Router) {}\n  get isLoggedIn(): boolean {\n    return this.authService.isLoggedIn;\n  }\n\n  logOut(): void {\n    this.authService.logout();\n    this.router.navigateByUrl('/login');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CongratulationsComponent } from './congratulations/congratulations.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CongratulationsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<p>\\n  You are logged in! Congratulations!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmdyYXR1bGF0aW9ucy9jb25ncmF0dWxhdGlvbnMuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-congratulations',\n  templateUrl: './congratulations.component.html',\n  styleUrls: ['./congratulations.component.less']\n})\nexport class CongratulationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      return this.checkUserLoggedIn(state .url);\n  }\n\n  checkUserLoggedIn(url: string) {\n    if (this.authService.isLoggedIn) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentUser: User;\n\n  constructor(private http: HttpClient) { }\n\n  get isLoggedIn(): boolean {\n    return !!this.currentUser;\n  }\n\n  logIn(user: User): Observable<any> {\n    this.currentUser = {\n      email: user.email,\n      password: user.password\n    };\n    return this.http.post('https://putsreq.com/DX4uiqPQdKmFWS4zgYpl', user);\n  }\n\n  logout(): void {\n    this.currentUser = null;\n  }\n}\n","module.exports = \"<div class=\\\"login\\\">\\n  <div class=\\\"container\\\">\\n    <form  novalidate\\n    (ngSubmit)=\\\"save(ngForm)\\\"\\n    #ngForm=\\\"ngForm\\\" \\n    [formGroup]=\\\"loginForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-5 offset-md-3\\\">\\n          <h2>Welcome</h2>\\n          <h6>Please sign in to access your account</h6>\\n          <div class=\\\"form-group\\\">\\n            <input \\n              type=\\\"text\\\" \\n              class=\\\"form-control\\\" \\n              placeholder=\\\"Email\\\" \\n              formControlName=\\\"email\\\"\\n              id=\\\"email\\\"\\n              [ngClass]=\\\"{\\n                'is-invalid': ngForm.submitted && !loginForm.get('email').valid \\n              }\\\"\\n              >\\n            <div class=\\\"invalid-container\\\" \\n            *ngIf=\\\"ngForm.submitted && !loginForm.get('email').valid\\\">\\n              <div *ngIf=\\\"loginForm.get('email').errors?.customRegex\\\" class=\\\"alert alert-danger\\\">\\n                Enter a valid email\\n              </div>\\n              <div *ngIf=\\\"loginForm.get('email').errors?.required\\\" class=\\\"alert alert-danger\\\">\\n                Email cant be empty\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group password-container\\\">\\n            <input \\n              [attr.type]=\\\"isPasswordVisible?'password':'text'\\\" \\n              class=\\\"form-control\\\" \\n              id=\\\"password\\\"\\n              placeholder=\\\"Password\\\" \\n              formControlName=\\\"password\\\"\\n              [ngClass]=\\\"{'is-invalid': ngForm.submitted && !loginForm.get('password').valid }\\\"\\n            >\\n            <i class=\\\"fa fa-eye password-icon\\\" (mousedown)=\\\"showPassword()\\\" (mouseup)=\\\"hidePassword()\\\"></i>\\n            <div class=\\\"invalid-container\\\" \\n            *ngIf=\\\"ngForm.submitted && !loginForm.get('password').valid\\\">\\n              <div *ngIf=\\\"loginForm.get('password').errors?.customRegex\\\" class=\\\"alert alert-danger\\\">\\n                Password should have 8 characters or longer, at least 1 special character, 1 number, 1 uppercase\\n                character and 1 lower case character\\n              </div>\\n              <div *ngIf=\\\"loginForm.get('password').errors?.required\\\" class=\\\"alert alert-danger\\\">\\n                Password should not be empty\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mb-0\\\">\\n            <a href=\\\"#\\\" class=\\\"forgot-password\\\" value=\\\"Login\\\">Forgot Password?</a>\\n          </div>\\n          <br>\\n          <div class=\\\"form-group btn-container\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg create-account\\\">Create account</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg text-light sign-in\\\" >Sign in</button>\\n          </div>\\n\\n          <div class=\\\"invalid-container\\\" *ngIf=\\\"postError\\\">\\n            <div class=\\\"alert alert-danger\\\">\\n              {{postErrorMessage}}\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","module.exports = \".login {\\n  display: flex;\\n  height: calc(100vh - 100px);\\n  align-items: center;\\n}\\n.password-container {\\n  position: relative;\\n}\\n.password-container .password-icon {\\n  position: absolute;\\n  top: 10px;\\n  right: 5px;\\n  color: grey;\\n  cursor: pointer;\\n}\\n.forgot-password {\\n  color: #F07A32;\\n}\\n.btn-container {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n.btn-container .btn {\\n  width: calc(50% - 5px);\\n  height: 50px;\\n  font-size: 16px;\\n  font-weight: bold;\\n}\\n.create-account {\\n  color: #F07A32;\\n  border-color: #F07A32;\\n}\\n.sign-in {\\n  background-color: #F07A32;\\n}\\n.alert-danger {\\n  padding-top: 2px;\\n  padding-bottom: 2px;\\n  margin-bottom: 2px;\\n}\\n.invalid-container {\\n  margin-top: 2px;\\n  font-size: 12px;\\n}\\n.form-control.is-invalid {\\n  background: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93ZXNsZXlyZWJlbG8vc2l0ZXMvdGVja3Jvd2VzL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsYUFBQTtFQUNBLDJCQUFBO0VBQ0EsbUJBQUE7QUNERjtBREdBO0VBQ0Usa0JBQUE7QUNERjtBREFBO0VBR0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0FDQUo7QURHQTtFQUNFLGNBQUE7QUNERjtBRElBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0FDRkY7QURBQTtFQUlJLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0RKO0FES0E7RUFDRSxjQUFBO0VBQ0EscUJBQUE7QUNIRjtBREtBO0VBQ0UseUJBQUE7QUNIRjtBRE1BO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0FDSkY7QURPQTtFQUNFLGVBQUE7RUFDQSxlQUFBO0FDTEY7QURRQTtFQUNFLGdCQUFBO0FDTkYiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBvcmFuZ2U6ICNGMDdBMzI7XG5cbi5sb2dpbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDEwMHB4KTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5wYXNzd29yZC1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIC5wYXNzd29yZC1pY29uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgY29sb3I6IGdyZXk7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG4uZm9yZ290LXBhc3N3b3JkIHsgXG4gIGNvbG9yOiBAb3JhbmdlO1xufVxuXG4uYnRuLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLmJ0biB7XG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gNXB4KTtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG59XG5cbi5jcmVhdGUtYWNjb3VudCB7XG4gIGNvbG9yOiBAb3JhbmdlO1xuICBib3JkZXItY29sb3I6IEBvcmFuZ2U7XG59XG4uc2lnbi1pbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IEBvcmFuZ2U7XG59XG5cbi5hbGVydC1kYW5nZXIge1xuICBwYWRkaW5nLXRvcDogMnB4O1xuICBwYWRkaW5nLWJvdHRvbTogMnB4O1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG59XG5cbi5pbnZhbGlkLWNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDJweDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uZm9ybS1jb250cm9sLmlzLWludmFsaWQge1xuICBiYWNrZ3JvdW5kOiBub25lO1xufSIsIi5sb2dpbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDEwMHB4KTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5wYXNzd29yZC1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ucGFzc3dvcmQtY29udGFpbmVyIC5wYXNzd29yZC1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwcHg7XG4gIHJpZ2h0OiA1cHg7XG4gIGNvbG9yOiBncmV5O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uZm9yZ290LXBhc3N3b3JkIHtcbiAgY29sb3I6ICNGMDdBMzI7XG59XG4uYnRuLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cbi5idG4tY29udGFpbmVyIC5idG4ge1xuICB3aWR0aDogY2FsYyg1MCUgLSA1cHgpO1xuICBoZWlnaHQ6IDUwcHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uY3JlYXRlLWFjY291bnQge1xuICBjb2xvcjogI0YwN0EzMjtcbiAgYm9yZGVyLWNvbG9yOiAjRjA3QTMyO1xufVxuLnNpZ24taW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjA3QTMyO1xufVxuLmFsZXJ0LWRhbmdlciB7XG4gIHBhZGRpbmctdG9wOiAycHg7XG4gIHBhZGRpbmctYm90dG9tOiAycHg7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbn1cbi5pbnZhbGlkLWNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDJweDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuLmZvcm0tY29udHJvbC5pcy1pbnZhbGlkIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl, NgForm } from '@angular/forms';\nimport { User } from './user';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  isPasswordVisible: boolean = true;\n  user = new User();\n  postError = false;\n  postErrorMessage = '';\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, this.customRegexValidator(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/i)]],\n      password: ['', [Validators.required,\n        this.customRegexValidator(/((?=.*\\d)(?=.*[A-Z])(?=.*\\W).{8,})/)]],\n    });\n  }\n\n  customRegexValidator(nameRe: RegExp): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n      const customRegex = nameRe.test(control.value);\n      return customRegex ? null : {customRegex: {value: control.value}};\n    };\n  }\n\n  showPassword() {\n    this.isPasswordVisible = false;\n  }\n\n  hidePassword() {\n    this.isPasswordVisible = true;\n  }\n\n  save(form: NgForm) {\n    if (this.loginForm.valid) {\n      this.user = {\n        email: this.loginForm.value.email,\n        password: this.loginForm.value.password\n      };\n      this.authService.logIn(this.user).subscribe(\n        result => {\n          console.log('success: ', result);\n          this.router.navigate(['/congratulations']);\n        },\n          error => this.onHttpError(error)\n        );\n    }\n  }\n\n  onHttpError(errorResponse: any) {\n    console.log('error:', errorResponse);\n    this.postError = true;\n    this.postErrorMessage = errorResponse.message;\n  }\n}\n","export class User {\n\n  constructor(\n    public email = '',\n    public password = ''\n    ) { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}